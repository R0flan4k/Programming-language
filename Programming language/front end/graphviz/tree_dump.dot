digraph G
{
    graph [dpi = 150]
    ranksep = 0.6;
    bgcolor = "#f0faf0"
    splines = curved;
    edge[minlen = 3];
    node[shape = record, style = "rounded", color = "#f58eb4",
        fixedsize = true, height = 1, width = 6, fontsize = 15];
    {rank = min;
        inv_min [style = invis];
    }
    {rank = max;
        info_node [label = " &program_tree[0x7ffcfc2f8b90] \n from src/main.cpp \n main:44 ", color = green];
    }
    node0x56363ff3b910 [ label = "{[0x56363ff3b910] лох | { <l> left[0x56363ff3b940] | right[(nil)]  }}" ]
    node0x56363ff3b940 [ label = "{[0x56363ff3b940] int | { <l> left[0x56363ff3b970] | right[0x56363ff3b9a0]  }}" ]
    node0x56363ff3b9a0 [ label = "{[0x56363ff3b9a0] ; | { <l> left[0x56363ff3b9d0] | right[0x56363ff3baf0]  }}" ]
    node0x56363ff3baf0 [ label = "{[0x56363ff3baf0] ; | { <l> left[0x56363ff3bb20] | right[0x56363ff3bd90]  }}" ]
    node0x56363ff3bd90 [ label = "{[0x56363ff3bd90] ; | { <l> left[0x56363ff3bdc0] | right[0x56363ff3be20]  }}" ]
    node0x56363ff3be20 [ label = "{[0x56363ff3be20] END OF BODY | { <l> left[(nil)] | right[(nil)]  }}" ]
    node0x56363ff3bdc0 [ label = "{[0x56363ff3bdc0] return | { <l> left[0x56363ff3bdf0] | right[(nil)]  }}" ]
    node0x56363ff3bdf0 [ label = "{[0x56363ff3bdf0] aboba | { <l> left[(nil)] | right[(nil)]  }}" ]
    node0x56363ff3bb20 [ label = "{[0x56363ff3bb20] if | { <l> left[0x56363ff3bb50] | right[0x56363ff3bca0]  }}" ]
    node0x56363ff3bca0 [ label = "{[0x56363ff3bca0] ; | { <l> left[0x56363ff3bcd0] | right[0x56363ff3bd60]  }}" ]
    node0x56363ff3bd60 [ label = "{[0x56363ff3bd60] END OF BODY | { <l> left[(nil)] | right[(nil)]  }}" ]
    node0x56363ff3bcd0 [ label = "{[0x56363ff3bcd0] = | { <l> left[0x56363ff3bd00] | right[0x56363ff3bd30]  }}" ]
    node0x56363ff3bd30 [ label = "{[0x56363ff3bd30] 1.00 | { <l> left[(nil)] | right[(nil)]  }}" ]
    node0x56363ff3bd00 [ label = "{[0x56363ff3bd00] aboba | { <l> left[(nil)] | right[(nil)]  }}" ]
    node0x56363ff3bb50 [ label = "{[0x56363ff3bb50] > | { <l> left[0x56363ff3bb80] | right[0x56363ff3bc10]  }}" ]
    node0x56363ff3bc10 [ label = "{[0x56363ff3bc10] 1.00 | { <l> left[(nil)] | right[(nil)]  }}" ]
    node0x56363ff3bb80 [ label = "{[0x56363ff3bb80] aboba | { <l> left[(nil)] | right[(nil)]  }}" ]
    node0x56363ff3b9d0 [ label = "{[0x56363ff3b9d0] int | { <l> left[0x56363ff3ba00] | right[0x56363ff3ba30]  }}" ]
    node0x56363ff3ba30 [ label = "{[0x56363ff3ba30] 2.00 | { <l> left[(nil)] | right[(nil)]  }}" ]
    node0x56363ff3ba00 [ label = "{[0x56363ff3ba00] aboba | { <l> left[(nil)] | right[(nil)]  }}" ]
    node0x56363ff3b970 [ label = "{[0x56363ff3b970] void | { <l> left[(nil)] | right[(nil)]  }}" ]
    node0x56363ff3b910:<l> -> node0x56363ff3b940;
    node0x56363ff3b940:<l> -> node0x56363ff3b970;
    node0x56363ff3b940:<r> -> node0x56363ff3b9a0;
    node0x56363ff3b9a0:<l> -> node0x56363ff3b9d0;
    node0x56363ff3b9d0:<l> -> node0x56363ff3ba00;
    node0x56363ff3b9d0:<r> -> node0x56363ff3ba30;
    node0x56363ff3b9a0:<r> -> node0x56363ff3baf0;
    node0x56363ff3baf0:<l> -> node0x56363ff3bb20;
    node0x56363ff3bb20:<l> -> node0x56363ff3bb50;
    node0x56363ff3bb50:<l> -> node0x56363ff3bb80;
    node0x56363ff3bb50:<r> -> node0x56363ff3bc10;
    node0x56363ff3bb20:<r> -> node0x56363ff3bca0;
    node0x56363ff3bca0:<l> -> node0x56363ff3bcd0;
    node0x56363ff3bcd0:<l> -> node0x56363ff3bd00;
    node0x56363ff3bcd0:<r> -> node0x56363ff3bd30;
    node0x56363ff3bca0:<r> -> node0x56363ff3bd60;
    node0x56363ff3baf0:<r> -> node0x56363ff3bd90;
    node0x56363ff3bd90:<l> -> node0x56363ff3bdc0;
    node0x56363ff3bdc0:<l> -> node0x56363ff3bdf0;
    node0x56363ff3bd90:<r> -> node0x56363ff3be20;
info_node -> node0x56363ff3b910 [style = invis];
}